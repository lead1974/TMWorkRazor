#pragma checksum "C:\Andrey\WebApps\TMWorkRazor\TMWork\Pages\Admin\Contact\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "6200512d1c5cb08eb678cd0e0575969047e03ade"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(TMWork.Pages.Admin.Contact.Pages_Admin_Contact_Index), @"mvc.1.0.razor-page", @"/Pages/Admin/Contact/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.RazorPages.Infrastructure.RazorPageAttribute(@"/Pages/Admin/Contact/Index.cshtml", typeof(TMWork.Pages.Admin.Contact.Pages_Admin_Contact_Index), null)]
namespace TMWork.Pages.Admin.Contact
{
    #line hidden
    using System;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Andrey\WebApps\TMWorkRazor\TMWork\Pages\_ViewImports.cshtml"
using TMWork;

#line default
#line hidden
#line 2 "C:\Andrey\WebApps\TMWorkRazor\TMWork\Pages\_ViewImports.cshtml"
using TMWork.Data;

#line default
#line hidden
#line 3 "C:\Andrey\WebApps\TMWorkRazor\TMWork\Pages\_ViewImports.cshtml"
using TMWork.ViewModels;

#line default
#line hidden
#line 4 "C:\Andrey\WebApps\TMWorkRazor\TMWork\Pages\_ViewImports.cshtml"
using Microsoft.Extensions.Configuration;

#line default
#line hidden
#line 5 "C:\Andrey\WebApps\TMWorkRazor\TMWork\Pages\_ViewImports.cshtml"
using System.Collections.Generic;

#line default
#line hidden
#line 6 "C:\Andrey\WebApps\TMWorkRazor\TMWork\Pages\_ViewImports.cshtml"
using Microsoft.AspNetCore.Http;

#line default
#line hidden
#line 7 "C:\Andrey\WebApps\TMWorkRazor\TMWork\Pages\_ViewImports.cshtml"
using Microsoft.AspNetCore.Http.Authentication;

#line default
#line hidden
#line 8 "C:\Andrey\WebApps\TMWorkRazor\TMWork\Pages\_ViewImports.cshtml"
using Microsoft.AspNetCore.Identity;

#line default
#line hidden
#line 10 "C:\Andrey\WebApps\TMWorkRazor\TMWork\Pages\_ViewImports.cshtml"
using TMWork.GoogleReCaptcha.Web.Validation;

#line default
#line hidden
#line 13 "C:\Andrey\WebApps\TMWorkRazor\TMWork\Pages\_ViewImports.cshtml"
using TMWork.Data.Core.Domain;

#line default
#line hidden
#line 17 "C:\Andrey\WebApps\TMWorkRazor\TMWork\Pages\_ViewImports.cshtml"
using Kendo.Mvc.UI;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"6200512d1c5cb08eb678cd0e0575969047e03ade", @"/Pages/Admin/Contact/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"f28e6fa003f70828dc5c2e2de3130aa3cf86279d", @"/Pages/_ViewImports.cshtml")]
    public class Pages_Admin_Contact_Index : global::Microsoft.AspNetCore.Mvc.RazorPages.Page
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 4 "C:\Andrey\WebApps\TMWorkRazor\TMWork\Pages\Admin\Contact\Index.cshtml"
  
    ViewData["Title"] = "Manage Contacts";

#line default
#line hidden
            BeginContext(164, 235, true);
            WriteLiteral("\r\n<h2>Manage Contacts</h2>\r\n<hr />\r\n<br />\r\n<input class=\"k-textbox\" id=\"searchContacts\" placeholder=\"Search data...\" /> <i>Minimum 3 charachters required to trigger search function</i>\r\n<br />\r\n<p>\r\n    <div class=\"col-lg-12\">\r\n\r\n    ");
            EndContext();
            BeginContext(401, 1817, false);
#line 16 "C:\Andrey\WebApps\TMWorkRazor\TMWork\Pages\Admin\Contact\Index.cshtml"
Write(Html.Kendo().Grid<Contact>()
        .Name("gridContact")
        .Columns(columns =>
        {
            columns.Bound(p => p.ContactId).Filterable(false);
            columns.Bound(p => p.Name).Filterable(filter => filter.Extra(false).Operators(o => o.ForString(f => f.Clear().Contains("Contains"))));
            columns.Bound(p => p.Email).Filterable(filter => filter.Extra(false).Operators(o => o.ForString(f => f.Clear().Contains("Contains"))));
            columns.Bound(p => p.Phone).Filterable(filter => filter.Extra(false).Operators(o => o.ForString(f => f.Clear().Contains("Contains"))));
            columns.Bound(p => p.Message).Filterable(filter => filter.Extra(false).Operators(o => o.ForString(f => f.Clear().Contains("Contains"))));
            columns.Command(command =>
            {
                command.Edit();
                command.Destroy();
            }).Width(250); //
        })
        .ToolBar(tools =>
        {
            tools.Create();
            tools.Excel();
        })
        .Editable(editable => editable.Mode(GridEditMode.InLine))
        .Sortable()
        .Pageable()
        .Filterable()
        .DataSource(datasource =>
                    datasource
                    .WebApi()
                    .Model(model =>
                    {
                        model.Id(c => c.ContactId);
                    })
        //.Categ(Categ => Categ.Error("error_handler"))
        .Read(read => read.Action("GetAllContacts", "Contact"))
        .Create(create => create.Action("CreateContact", "Contact"))
        .Update(update => update.Action("UpdateContact", "Contact", new { id = "{0}" }))
        .Destroy(destroy => destroy.Action("DeleteContact", "Contact", new { id = "{0}" }))
        .PageSize(10)
        )

    );

#line default
#line hidden
            EndContext();
            BeginContext(2219, 979, true);
            WriteLiteral(@"
</div>

    <script>

        $(document).ready(function () {

            $(""#searchContacts"").on(""keyup change"", function (e) {
                var grid = $(""#gridContact"").data(""kendoGrid"");
                var searchTxt = $(""#searchContacts"").val();

                if (searchTxt.length >= 3) {

                    grid.dataSource.filter({
                        logic: ""or"", filters: [
                            { field: ""Name"", operator: ""contains"", value: searchTxt },
                            { field: ""Phone"", operator: ""contains"", value: searchTxt },
                            { field: ""Email"", operator: ""contains"", value: searchTxt },
                            { field: ""Message"", operator: ""contains"", value: searchTxt }]
                    });
                }
                else if (searchTxt.length == 0) {
                    grid.dataSource.filter([]);
                }
            });

        });

    </script>
");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public Microsoft.AspNetCore.Antiforgery.IAntiforgery Xsrf { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public TMWork.Data.Core.IUnitOfWork _unitOfWork { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public IConfiguration configuration { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<TMWork.Pages.Admin.Contact.IndexModel> Html { get; private set; }
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<TMWork.Pages.Admin.Contact.IndexModel> ViewData => (global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<TMWork.Pages.Admin.Contact.IndexModel>)PageContext?.ViewData;
        public TMWork.Pages.Admin.Contact.IndexModel Model => ViewData.Model;
    }
}
#pragma warning restore 1591
